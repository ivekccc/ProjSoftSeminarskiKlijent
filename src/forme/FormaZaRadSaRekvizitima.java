/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forme;

import auth.LoginForm;
import domain.Administrator;
import domain.Rekvizit;
import domain.TipRekvizita;
import domain.Zaduzenje;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import modeliTabela.ModelTabeleRekviziti;
import modeliTabela.ModelTabeleZaduzenja;
import transfer.Response;
import userController.UserInterfaceController;

/**
 *
 * @author x
 */
public class FormaZaRadSaRekvizitima extends javax.swing.JFrame {
    private List<Rekvizit> listaRekvizita=new ArrayList<>();
    private List<Zaduzenje> listaZaduzenja=new ArrayList<>();
    private Administrator ulogovaniAdmin;
    List<TipRekvizita> listaTipova=new ArrayList<>();
    
    /**
     * Creates new form FormaZaduzenja
     */
    public FormaZaRadSaRekvizitima(Administrator ulogovaniAdmin) {
        initComponents();
        this.setTitle("Forma za rad sa korisnicima");
        this.ulogovaniAdmin=ulogovaniAdmin;
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                // Pozivanje metode za odjavu
                odjaviSe();
            }

        });
        this.setLocationRelativeTo(null);
        popuniTabeluZaduzenja();
        popuniTabeluRekvizita(null);
        popuniComboBoxTip();
        jTextFieldPretraga.getDocument().addDocumentListener(new javax.swing.event.DocumentListener(){
            @Override
            public void insertUpdate(DocumentEvent e) {
                 filterZaduzenja();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                 filterZaduzenja();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                 filterZaduzenja();
            }

            private void filterZaduzenja() {
                String tekst = jTextFieldPretraga.getText().toLowerCase();
    List<Zaduzenje> filtriranaLista = new ArrayList<>();

    for (Zaduzenje zaduzenje : listaZaduzenja) {
        String korisnikImePrezime = zaduzenje.getKorisnik().getIme().toLowerCase() + " " +
                                    zaduzenje.getKorisnik().getPrezime().toLowerCase();
        if (korisnikImePrezime.contains(tekst)) {
            filtriranaLista.add(zaduzenje);
        }
    }
    ModelTabeleZaduzenja mtz = new ModelTabeleZaduzenja(filtriranaLista);
    jTableZaduzenja.setModel(mtz);
            }
            
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonDodajRekvizit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableRekviziti = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableZaduzenja = new javax.swing.JTable();
        jButtonRazduzi = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxTip = new javax.swing.JComboBox<>();
        jButtonFiltriraj = new javax.swing.JButton();
        jButtonPonisti = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldPretraga = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemGlavnaForma = new javax.swing.JMenuItem();
        jMenuItemRadSaKorisnicima = new javax.swing.JMenuItem();
        jMenuItemOdjava = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonDodajRekvizit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonDodajRekvizit.setText("Dodaj Rekvizit");
        jButtonDodajRekvizit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDodajRekvizitActionPerformed(evt);
            }
        });

        jTableRekviziti.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableRekviziti);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Tabela rekvizita");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Tabela zaduzenja");

        jTableZaduzenja.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTableZaduzenja);

        jButtonRazduzi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonRazduzi.setText("Razduzi");
        jButtonRazduzi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRazduziActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("RAD SA ZADUZENJIMA I REKVIZITIMA");

        jComboBoxTip.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jButtonFiltriraj.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonFiltriraj.setText("Filtriraj");
        jButtonFiltriraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFiltrirajActionPerformed(evt);
            }
        });

        jButtonPonisti.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonPonisti.setText("Ponisti");
        jButtonPonisti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPonistiActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Pretraga:");

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setText("Dodaj zaduzenje");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jMenu1.setText("Meni");

        jMenuItemGlavnaForma.setText("Glavna forma");
        jMenuItemGlavnaForma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemGlavnaFormaActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemGlavnaForma);

        jMenuItemRadSaKorisnicima.setText("Rad sa korisnicima");
        jMenuItemRadSaKorisnicima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRadSaKorisnicimaActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemRadSaKorisnicima);

        jMenuItemOdjava.setText("Odjava");
        jMenuItemOdjava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOdjavaActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemOdjava);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(137, 137, 137))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButtonDodajRekvizit)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                                .addComponent(jComboBoxTip, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonFiltriraj)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonPonisti))
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonRazduzi, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2))))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRazduzi)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonFiltriraj)
                    .addComponent(jButtonPonisti)
                    .addComponent(jComboBoxTip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonDodajRekvizit)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonRazduziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRazduziActionPerformed
        int izabraniRed=jTableZaduzenja.getSelectedRow();
        if(izabraniRed==-1){
            JOptionPane.showMessageDialog(this, "Greska pri razduzivanju. Morate da izaberete sta razduzujete!","Upozorenje",JOptionPane.WARNING_MESSAGE);
            return;
        }
        ModelTabeleZaduzenja mtz=(ModelTabeleZaduzenja) jTableZaduzenja.getModel();
        Zaduzenje zaduzenje=mtz.getListaZaduzenja().get(izabraniRed);
        Response response=UserInterfaceController.getInstance().razduzi(zaduzenje);
        if(response.isSuccessful()){
            JOptionPane.showMessageDialog(this, response.getMessage(),"Uspesno",JOptionPane.INFORMATION_MESSAGE);
            popuniTabeluZaduzenja();
            popuniTabeluRekvizita(null);
        }
        else{
            JOptionPane.showMessageDialog(this, response.getMessage(),"Greska",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonRazduziActionPerformed

    private void jMenuItemGlavnaFormaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemGlavnaFormaActionPerformed
        new GlavnaForma(ulogovaniAdmin).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItemGlavnaFormaActionPerformed

    private void jMenuItemOdjavaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOdjavaActionPerformed
        Response response = UserInterfaceController.getInstance().odjaviAdministratora();
        if (response.isSuccessful()) {
            JOptionPane.showMessageDialog(this, response.getMessage());
            // Zatvaranje svih formi i povratak na login formu
            dispose();
            new LoginForm().setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, response.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemOdjavaActionPerformed

    private void jMenuItemRadSaKorisnicimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRadSaKorisnicimaActionPerformed
        FormaZaRadSaKorisnicima fk=new FormaZaRadSaKorisnicima(ulogovaniAdmin);
        fk.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItemRadSaKorisnicimaActionPerformed

    private void jButtonDodajRekvizitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDodajRekvizitActionPerformed
        DodavanjaRekvizitaForma drf=new DodavanjaRekvizitaForma(this, true);
        drf.setVisible(true);
    }//GEN-LAST:event_jButtonDodajRekvizitActionPerformed

    private void jButtonFiltrirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFiltrirajActionPerformed
        TipRekvizita tip=(TipRekvizita) jComboBoxTip.getSelectedItem();
        popuniTabeluRekvizita(tip);
    }//GEN-LAST:event_jButtonFiltrirajActionPerformed

    private void jButtonPonistiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPonistiActionPerformed
        popuniTabeluRekvizita(null);
    }//GEN-LAST:event_jButtonPonistiActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DodavanjeZaduzenjaForma dzf=new DodavanjeZaduzenjaForma(this, true);
        dzf.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonDodajRekvizit;
    private javax.swing.JButton jButtonFiltriraj;
    private javax.swing.JButton jButtonPonisti;
    private javax.swing.JButton jButtonRazduzi;
    private javax.swing.JComboBox<TipRekvizita> jComboBoxTip;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemGlavnaForma;
    private javax.swing.JMenuItem jMenuItemOdjava;
    private javax.swing.JMenuItem jMenuItemRadSaKorisnicima;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableRekviziti;
    private javax.swing.JTable jTableZaduzenja;
    private javax.swing.JTextField jTextFieldPretraga;
    // End of variables declaration//GEN-END:variables

    public void popuniTabeluRekvizita(TipRekvizita tip) {
        Response response=UserInterfaceController.getInstance().vratiRekvizite(tip);
        this.listaRekvizita=(List<Rekvizit>) response.getResult();
        System.out.println(listaRekvizita);
        ModelTabeleRekviziti mtr=new ModelTabeleRekviziti(listaRekvizita);
        jTableRekviziti.setModel(mtr);
    }

    void osveziTabelu() {
        ModelTabeleRekviziti mtr=(ModelTabeleRekviziti) jTableRekviziti.getModel();
        mtr.osveziTabelu();
    }

    public void popuniTabeluZaduzenja() {
        Response response=UserInterfaceController.getInstance().vratiZaduzenja();
        this.listaZaduzenja=(List<Zaduzenje>) response.getResult();
        ModelTabeleZaduzenja mtz=new ModelTabeleZaduzenja(listaZaduzenja);
        jTableZaduzenja.setModel(mtz);
    }

    private void popuniComboBoxTip() {
        Response response=UserInterfaceController.getInstance().vratiTipove();
        listaTipova=(List<TipRekvizita>)response.getResult();
        for(TipRekvizita tip:listaTipova){
            jComboBoxTip.addItem(tip);
        }
    }
    private void odjaviSe() {
        Response response = UserInterfaceController.getInstance().odjaviAdministratora();
        if (response.isSuccessful()) {
            JOptionPane.showMessageDialog(this, response.getMessage());
            // Zatvaranje svih formi i povratak na login formu
            dispose();
            new LoginForm().setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, response.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }

    public List<Zaduzenje> getListaZaduzenja() {
        return listaZaduzenja;
    }
    
}
